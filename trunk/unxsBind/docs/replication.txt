$Id: replication.txt 674 2008-12-19 15:10:07Z hus-admin $

**** MySQL Replication Cluster Mini-HOWTO ****

(C) 2008-2009 Hugo Urquiza for Unixservice. Based on MySQL 5.0 Reference Manual

---
Abstract
---
This document illustrates the process of quickly setting up MySQL replication cluster for iDNS.

---
Instructions
---
1. Grating privileges for replication

First of all you should grant replication privileges for the slave:

mysql> GRANT REPLICATION SLAVE ON *.*
    -> TO idns@slave1.unixservice.com IDENTIFIED BY .wsxedc.;

2.  Master configuration update

Once you have that setup you should proceed to setup the master for replication. Using you favorite text editor, add the following lines to the /etc/my.cnf at the master:

[mysqld]
log-bin=/var/lib/mysql/binary/mysql_binary_log
binlog-do-db=idns
server-id=1

3. Slave configuration update

Then, you.ll update slave /etc/my.cnf file adding:

[mysqld]
server-id=2

4. Obtaining the Master Replication Information

Lock operations at the master by running:

mysql> FLUSH TABLES WITH READ LOCK;

Then run the following command to get master replication information:

mysql> SHOW MASTER STATUS;
+-------------------------+----------+--------------+------------------+
| File                    | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+-------------------------+----------+--------------+------------------+
| mysql_binary_log.000001 |     3476 | idns         |                  |
+-------------------------+----------+--------------+------------------+
1 row in set (0.01 sec)
Please take note of the filename and the position number; you.ll use them later on.

Important: DO NOT CLOSE the mysql client where you ran the lock!

5. Dump database data from master and load it at slave:

master # mysqldump idns --master-data >dbdump.db
master # scp dbdump joe@slave1.unixservice.com:/home/joe

Shutdown slave MySQL server and restart with the --skip-slave option:

slave # /etc/init.d/mysql stop; mysqld_safe --skip-slave  &
slave # mysql idns < dbdump.db

6. Setting the Master Configuration on the Slave

Run the following query at the slave:

mysql> CHANGE MASTER TO
    ->     MASTER_HOST='master_host_name',
    ->     MASTER_USER='replication_user_name',
    ->     MASTER_PASSWORD='replication_password',
    ->     MASTER_LOG_FILE='recorded_log_file_name',
    ->     MASTER_LOG_POS=recorded_log_position;

(Here.s is where you.ll use the values from [4])

7. Unlock tables at master:

mysql> UNLOCK TABLES;

8. Lastly, start replication:

mysql> SLAVE START;

You should see an entry similar to this at you MySQL logfile:

080612 15:52:15 [Note] Slave I/O thread: connected to master 'idns@master.unixservice.com:3306',  replication started in log 'mysql_binary_log.000001' at position 3476

---
References
---

http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html (MySQL 5.0 Reference Manual :: 16 Replication :: 16.1 Replication Configuration :: 16.1.1 How to Set Up Replication)

