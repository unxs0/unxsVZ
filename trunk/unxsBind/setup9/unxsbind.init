#!/bin/sh
#
# unxsbind	This shell script takes care of starting and stopping
#		the unxsbind controlled BIND named daemon
#
# chkconfig: - 13 87
# description: named (BIND) is a Domain Name Server (DNS) \
# that is used to resolve host names to IP addresses.

# Copyright 2010 Unixservice, LLC.

# Source function library.
. /etc/rc.d/init.d/functions

SRC_CRONSCRIPT_DIR=/usr/local/share/iDNS/setup9;
DST_CRONSCRIPT_DIR=/etc/cron.d;

if [ -f /etc/sysconfig/unxsbind ]; then
	. /etc/sysconfig/unxsbind
	if [ -r /etc/redhat-release ] || [ -r /etc/centos-release ]; then
		DISTR=redhat
	fi
fi

__echo()
{
	if [ "$DISTR" = "redhat" ]; then
		echo -n $"$1"
	else
		echo -n "$1"
	fi
}

check_old_cron_files()
{
	/bin/grep iDNS.cgi /var/spool/cron/root > /dev/null 2>&1;
	return $?
}

setup_cron()
{
	check_old_cron_files && return
	[ -z "$SRC_CRONSCRIPT_DIR" ] && return
	[ -d "$SRC_CRONSCRIPT_DIR" ] || return
	cat $SRC_CRONSCRIPT_DIR/root-crontab > $DST_CRONSCRIPT_DIR/unxsbind &&
		chmod 644 $DST_CRONSCRIPT_DIR/unxsbind
}

remove_cron()
{
	[ -z "$SRC_CRONSCRIPT_DIR" ] && return
	[ -d "$SRC_CRONSCRIPT_DIR" ] || return
	cat > $DST_CRONSCRIPT_DIR/unxsbind <<EOF
# DO NOT EDIT THIS FILE!
#
# Contents of this file managed by /etc/init.d/unxsbind script
# Master copy is in $SRC_CRONSCRIPT_DIR/root-crontab file.
# Consult $SRC_CRONSCRIPT_DIR/root-crontab for documentation.
EOF
}

is_running()
{
	/usr/sbin/rndc -c /etc/unxsbind-rndc.conf status > /dev/null 2>&1;
	return $?;
}

update_cron()
{
	if is_running; then
		__echo "Adding unxsBind cron entries"
		setup_cron
	else
		__echo "Removing unxsBind cron entries"
		remove_cron
	fi
	print_result
}

print_success()
{
	if [ "$DISTR" = "redhat" ]; then
		echo_success
	else
		echo -n "$rc_done"
	fi
	echo
}

print_failure()
{
	echo -n "$1"
	if [ "$DISTR" = "redhat" ]; then
		failure $"$1"
	else
		echo -n "$rc_failed"
	fi
	echo
}

# Calls either print_success or print_failure, depending on $?
# Optional argument $1 -- an error string passed to print_failure.
print_result()
{
	if [ $? -eq 0 ] ; then
		print_success
	else
		print_failure "$1"
	fi
}

status()
{
	if is_running; then
		echo "unxsBind is running..."
		return 0
	else
		echo "unxsBind is stopped."
		return 3
	fi
}


case "$1" in
  start)
	echo -n $"Starting unxsBind controlled named";
	setup_cron;
	echo "";
	if [ -x /usr/sbin/named-checkconf ] && [ -x /usr/sbin/named ] \
			&& /usr/sbin/named-checkconf /usr/local/idns/named.conf  >/dev/null 2>&1; then
		/usr/sbin/named -u named -c /usr/local/idns/named.conf;
		if [ $? != 0 ]; then
			echo -n $"Failed to start named";
			echo "";
			RETVAL=1;
		fi
	else
		echo -n $"Failed to start named configuration problem";
		echo "";
		RETVAL=1;
	fi
	;;
  stop)
	echo -n $"Stoping unxsBind controlled named";
	remove_cron;
	echo "";
	if [ -x /usr/sbin/rndc ]; then
		/usr/sbin/rndc -c /etc/unxsbind-rndc.conf stop;
		if [ $? != 0 ]; then
			echo -n $"Failed to stop named";
			echo "";
			RETVAL=1;
		fi
	else
		echo -n $"Failed to stop named no rndc";
		echo "";
		RETVAL=1;
	fi
	;;
  restart|reload)
	$0 stop
	$0 start
	;;
  status)
	status
	RETVAL=$?
	;;
  update-cron)
	update_cron
	RETVAL=0
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|status|update-cron}"
	RETVAL=3
	;;
esac

exit $RETVAL
