#!/bin/bash

#PURPOSE
#	Generate only the iptables nat table 

if [ "$1" == "" ] ;then
	echo "usage: $0 <cSourceIPv4>";
	exit;
fi

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

if ! valid_ip $1;then
	echo "Error: cSourceIPv4 $1 is not a valid dotted quad";
	exit 1;
fi

#iptables
#top part
cIptablesFile="/etc/sysconfig/iptables.natpbx2";
cat  > $cIptablesFile << EOF
#
# Generated by unxsVZ iptables_only.sample.sh
# 
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
#
EOF
#middle part. New unxsNATPBX adds SNAT rules also
/usr/sbin/unxsNATPBX CreateIptablesData $1 >> $cIptablesFile;
#end part
cat  >> $cIptablesFile << EOF
#
COMMIT
# Generated by unxsVZ
EOF
echo "# `date +%b' '%d' '%T` $0[$$]: $@" >> $cIptablesFile
#uncomment to make this script do real work.
#/sbin/iptables-restore < $cIptablesFile;
